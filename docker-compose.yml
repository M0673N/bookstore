services:

  database:
    image: postgres
    volumes:
      - data:/var/lib/postgresql/data/
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: m0673n/bookstore
    env_file:
      - .env
    volumes:
      - static_volume:/bookstore/staticfiles
      # - media_volume:/bookstore/mediafiles
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "/bin/sh -c 'curl --fail http://localhost:8000 || exit 1'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      database:
        condition: service_healthy

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/bookstore/staticfiles
      # - media_volume:/bookstore/mediafiles
    ports:
      - "80:80"
    depends_on:
      app:
        condition: service_healthy

  mailhog:
    # For testing purpose due to ip filtering and ISP restrictions.
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  data:
  static_volume:
  # media_volume:

# For uploaded files you can swith media files settings back on and save to the local disk.
# You will also need to change the code responsible for file saving.
